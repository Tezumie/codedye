!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).CodeDye={})}(this,(function(e){"use strict";const t=new Map,n=new Map;function s(e){for(const t of e.classList)if(t.startsWith("language-"))return t.slice(9);return"js"}function r(e="js"){if(t.has(e))return t.get(e);const s=n.get(e);if("function"!=typeof s)throw new Error(`Language "${e}" not registered`);const r=s();return t.set(e,r),r}const o={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},a=/[&<>"']/g;function i(e=""){return e.replace(a,(e=>o[e]))}class c{constructor(e){this.rules=e,this.stateStack=[],this.bracketDepth=0,this._regexCache=new Map,this._compileAllRules(),this.setState("root")}setState(e){this.currentState=e}pushState(e){this.stateStack.push(this.currentState),this.setState(e)}popState(){return this.stateStack.length&&this.setState(this.stateStack.pop()),this.currentState}_compileAllRules(){this._compiled={};const e=this.rules.tokenizer||{};for(const[t,n]of Object.entries(e))this._compiled[t]=n.map((e=>{if(e.include)return{include:e.include.replace(/^@/,"")};const[t,n,s]=e;return{re:this._expandRegex(t,!0),outSpec:n,nextHint:s}}))}_expandRegex(e,t=!1){const n=e.toString()+(t?"y":"");if(this._regexCache.has(n))return this._regexCache.get(n);let s;if("string"==typeof e)s=new RegExp("^"+e,t?"y":"");else{let n=e.flags||"";t&&!n.includes("y")&&(n+="y");const r=e.source.replace(/@(\w+)/g,((e,t)=>{const n=this.rules[t];return n instanceof RegExp?n.source:"string"==typeof n?n:""}));s=new RegExp(r,n)}return this._regexCache.set(n,s),s}tokenize(e){const t=[];let n=0;for(;n<e.length;){const{pos:s,matches:r}=this._processState(this.currentState,e,n);r.length?(t.push(...r),n=s):(t.push({text:e[n],token:this.rules.defaultToken}),n++)}return t}_stripPost(e){const t=this.rules.tokenPostfix;return"string"==typeof e&&t&&e.endsWith(t)?e.slice(0,-t.length):e}_makeTok(e,t,n,s){const r={text:e,token:this._stripPost(t)};return n&&(r.embedEnter=n),s&&(r.embedExit=!0),r}_processState(e,t,n){const s=this._compiled[e];if(!s)return{pos:n,matches:[]};for(const e of s){if(e.include){const s=this._processState(e.include,t,n);if(s.matches.length||s.rematch)return s;continue}const{re:s,outSpec:r,nextHint:o}=e;s.lastIndex=n;const a=s.exec(t);if(!a)continue;if(Array.isArray(r)){const e=a[0],t=a.slice(1).map(((e,t)=>{const n=r[t];let s=this.rules.defaultToken,o=null,a=null;return"string"==typeof n?s=n:n&&"object"==typeof n&&(s=n.token||s,n.next&&this._handleNext(n.next),o=n.embedEnter||null,a=!!n.embedExit),this._makeTok(e,s,o,a)}));return{pos:n+e.length,matches:t}}let i=this.rules.defaultToken,c=o,l=null,g=null;if("string"==typeof r)i=r;else if(r&&"object"==typeof r){if(r.token&&(i=r.token),r.cases){let e=r.cases["@default"];for(const[t,n]of Object.entries(r.cases)){const s=this.rules[t.slice(1)];if(t.startsWith("@")&&Array.isArray(s)&&s.includes(a[0])||t===a[0]){e=n;break}}"string"==typeof e?i=e:e&&"object"==typeof e&&(i=e.token||i,e.next&&(c=e.next))}r.next&&(c=r.next),l=r.embedEnter||null,g=!!r.embedExit}if("string"==typeof c&&this._handleNext(c),"delimiter.bracket"===i){let e;/^[\{\(\[]$/.test(a[0])?(e=this.bracketDepth%6+1,this.bracketDepth++):(this.bracketDepth=Math.max(0,this.bracketDepth-1),e=this.bracketDepth%6+1),i+=`.level${e}`}return"@rematch"===i?{pos:n,matches:[{text:"",token:this.rules.defaultToken,embedExit:!0}]}:{pos:n+a[0].length,matches:[this._makeTok(a[0],i,l,g)]}}return{pos:n,matches:[]}}_handleNext(e){"@pop"===e?this.popState():e.startsWith("@")?this.pushState(e.slice(1)):this.pushState(e)}}class l{constructor(e){this.langStack=[{lang:e,tk:new c(r(e))}]}_cur(){return this.langStack[this.langStack.length-1]}tokenizeLine(e){const t=[],n=this.langStack;if(n.length>1&&"md"===n[0].lang&&/^\s*(```|~~~)/.test(e)){this.langStack.length=1;return this.langStack[0].tk.popState(),[{text:e,token:"string",lang:"md"}]}if(n.length>1){const{lang:s,tk:r}=this._cur(),o="css"===s?"</style>":"js"===s?"<\/script>":null;if(o&&e.includes(o)){const a=e.indexOf(o);a>0&&r.tokenize(e.slice(0,a)).forEach((e=>t.push({...e,lang:s}))),n.pop();const i=this._cur();return i.tk.tokenize(e.slice(a)).forEach((e=>t.push({...e,lang:i.lang}))),t}}for(const s of this._cur().tk.tokenize(e))if(s.embedEnter){t.push({...s,lang:this._cur().lang});const e=new c(r(s.embedEnter));e.setState("root"),n.push({lang:s.embedEnter,tk:e})}else if(s.embedExit){n.length>1&&n.pop();const e=this._cur().tk;e.setState("root"),e.stateStack=[],e.bracketDepth=0}else t.push({...s,lang:this._cur().lang});return t}setState(e){this._cur().tk.setState(e)}get stateStack(){return this._cur().tk.stateStack}set stateStack(e){this._cur().tk.stateStack=e}get bracketDepth(){return this._cur().tk.bracketDepth}set bracketDepth(e){this._cur().tk.bracketDepth=e}}const g={javascript:"js",typescript:"ts",html:"html",css:"css",python:"py",csharp:"cs",markdown:"md"};class u{constructor(){this.language="txt",this.stateStack=[],this.bracketDepth=0}tokenizeLine(e){return[{text:e,token:null,lang:"txt"}]}setState(e){}}const p={_resetTokenizer(e){e.setState("root"),e.stateStack.length=0,e.bracketDepth=0},init(e,t,n={}){"object"==typeof e&&({source:e,target:t,...n}=e);const s="string"==typeof e?document.querySelector(e):e,r="string"==typeof t?document.querySelector(t):t;if(!s||!r)throw new Error("Invalid source / target");const o={language:"js",debounce:0,...n};let a;o.language=g[o.language]||o.language;try{a=new l(o.language)}catch(e){console.warn(`Language "${o.language}" not registered, falling back to plain text.`),a=new u,o.language="txt"}const c=()=>{this._resetTokenizer(a);const e=s.value.split("\n");let t="";for(const n of e){for(const e of a.tokenizeLine(n))t+=e.token?`<span class="${e.token} ${e.lang}-${e.token}">${i(e.text)}</span>`:i(e.text);t+="\n"}r.innerHTML=`<code class="language-${o.language}">${t}</code>`},p=o.debounce?function(e,t=0){let n;return(...s)=>{clearTimeout(n),n=setTimeout((()=>e(...s)),t)}}(c,o.debounce):c;s.addEventListener("input",p),c()},highlightElement(e="",t={}){const n={language:"js",...t};let s;n.language=g[n.language]||n.language;try{s=new l(n.language)}catch(e){console.warn(`Language "${n.language}" not registered, falling back to plain text.`),s=new u,n.language="txt"}this._resetTokenizer(s);const r=e.split("\n");let o="";for(const e of r){for(const t of s.tokenizeLine(e))o+=t.token?`<span class="${t.token} ${t.lang}-${t.token}">${i(t.text)}</span>`:i(t.text);o+="\n"}return`<code class="language-${n.language}">${o}</code>`},highlightBlock(e,t={}){"string"==typeof e&&(e=document.querySelector(e));const n={language:s(e),...t};let r;n.language=g[n.language]||n.language;try{r=new l(n.language)}catch(e){console.warn(`Language "${n.language}" not registered, falling back to plain text.`),r=new u,n.language="txt"}this._resetTokenizer(r);const o=e.textContent.split("\n");let a="";for(const e of o){for(const t of r.tokenizeLine(e))a+=t.token?`<span class="${t.token} ${t.lang}-${t.token}">${i(t.text)}</span>`:i(t.text);a+="\n"}e.innerHTML=a},highlight(){document.querySelectorAll('pre code[class*="language-"],code[class*="language-"]').forEach((e=>{try{this.highlightBlock(e)}catch(e){console.warn(e)}}))}};function h(){return{defaultToken:"invalid",tokenPostfix:".js",keywords:["break","case","catch","class","continue","const","constructor","debugger","default","delete","do","else","export","extends","false","finally","for","from","function","get","if","import","in","instanceof","let","new","null","return","set","super","switch","symbol","this","throw","true","try","typeof","undefined","var","void","while","with","yield","async","await","of"],typeKeywords:["any","boolean","number","object","string","undefined"],operators:["<=",">=","==","!=","===","!==","=>","+","-","**","*","/","%","++","--","<<","</",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=","@"],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+(_+\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,regexpctl:/[(){}\[\]\$\^|\-*+?\.]/,regexpesc:/\\(?:[bBdDfnrstvwWn0\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,tokenizer:{root:[[/[{}]/,"delimiter.bracket"],[/\b(?:if|else|for|while|do|switch|case|break|continue|return|await|yield|throw|try|catch|finally|import|export|from)\b/,"keyword.flow"],[/\b(?:const|let|var|function|class|async|default|extends|new|typeof|instanceof|in|of)\b/,"keyword.declaration"],[/(?!\b(?:Array|Math|Date|JSON|Promise|String|Number|Boolean|RegExp|Error|Object|Function)\b)([a-zA-Z_$][\w$]*)(?=(\.[a-zA-Z_$][\w$]*)+)/,"objectName"],[/\b(?![A-Z][\w$]*\b)[a-zA-Z_$][\w$]*(?=\()/,"functionName"],{include:"common"}],common:[[/[a-z_$][\w$]*/,{cases:{"@typeKeywords":"keyword","@keywords":"keyword","@default":"identifier"}}],[/[A-Z][\w\$]*/,"type.identifier"],{include:"@whitespace"},[/\/(?=([^\\\/]|\\.)+\/([gimsuy]*)(\s*)(\.|;|\/|,|\)|\]|\}|$))/,{token:"regexp",bracket:"@open",next:"@regexp"}],[/[()\[\]]/,"delimiter.bracket"],[/[<>](?!@symbols)/,"delimiter"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/(@digits)[eE]([\-+]?(@digits))?/,"number.float"],[/(@digits)\.(@digits)([eE][\-+]?(@digits))?/,"number.float"],[/0[xX](@hexdigits)/,"number.hex"],[/0[oO]?(@octaldigits)/,"number.octal"],[/0[bB](@binarydigits)/,"number.binary"],[/(@digits)/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string_double"],[/'/,"string","@string_single"],[/`/,"string","@string_backtick"]],whitespace:[[/[ \t\r\n]+/,""],[/\/\*\*(?!\/)/,"comment.doc","@jsdoc"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],jsdoc:[[/[^\/*]+/,"comment.doc"],[/\*\//,"comment.doc","@pop"],[/[\/*]/,"comment.doc"]],regexp:[[/(\{)(\d+(?:,\d*)?)(\})/,["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],[/(\[)(\^?)(?=(?:[^\]\\\/]|\\.)+)/,["regexp.escape.control",{token:"regexp.escape.control",next:"@regexrange"}]],[/(\()(\?:|\?=|\?!)/,["regexp.escape.control","regexp.escape.control"]],[/[()]/,"regexp.escape.control"],[/@regexpctl/,"regexp.escape.control"],[/[^\\\/]+/,"regexp"],[/@regexpesc/,"regexp.escape"],[/\\\./,"regexp.invalid"],[/(\/)([gimsuy]*)/,[{token:"regexp",bracket:"@close",next:"@pop"},{token:"regexp.escape.other"}]]],regexrange:[[/-/,"regexp.escape.control"],[/\^/,"regexp.invalid"],[/@regexpesc/,"regexp.escape"],[/[^\]]/,"regexp"],[/\]/,{token:"regexp.escape.control",next:"@pop",bracket:"@close"}]],string_double:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]],string_single:[[/[^\\']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'/,"string","@pop"]],string_backtick:[[/\$\{/,{token:"delimiter.bracket",next:"@bracketCounting"}],[/[^\\`$]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/`/,"string","@pop"]],bracketCounting:[[/\{/,"delimiter.bracket","@bracketCounting"],[/\}/,"delimiter.bracket","@pop"],{include:"common"}]}}}var d,f;window.addEventListener("DOMContentLoaded",(()=>p.highlight())),d="js",f=h,n.set(d,f),"undefined"==typeof window||window.CodeDye||(window.CodeDye=p),e.getJsRules=h,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=codedye.js.umd.js.map
